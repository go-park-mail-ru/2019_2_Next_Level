// Code generated by MockGen. DO NOT EDIT.
// Source: ./server/MailBox/repository.go

// Package mock is a generated GoMock package.
package mock

import (
	model "2019_2_Next_Level/internal/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMailRepository is a mock of MailRepository interface
type MockMailRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMailRepositoryMockRecorder
}

// MockMailRepositoryMockRecorder is the mock recorder for MockMailRepository
type MockMailRepositoryMockRecorder struct {
	mock *MockMailRepository
}

// NewMockMailRepository creates a new mock instance
func NewMockMailRepository(ctrl *gomock.Controller) *MockMailRepository {
	mock := &MockMailRepository{ctrl: ctrl}
	mock.recorder = &MockMailRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMailRepository) EXPECT() *MockMailRepositoryMockRecorder {
	return m.recorder
}

// GetEmailByCode mocks base method
func (m *MockMailRepository) GetEmailByCode(code string) (model.Email, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmailByCode", code)
	ret0, _ := ret[0].(model.Email)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEmailByCode indicates an expected call of GetEmailByCode
func (mr *MockMailRepositoryMockRecorder) GetEmailByCode(code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmailByCode", reflect.TypeOf((*MockMailRepository)(nil).GetEmailByCode), code)
}

// GetEmailList mocks base method
func (m *MockMailRepository) GetEmailList(login, folder, sort string, firstNumber, count int) ([]model.Email, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmailList", login, folder, sort, firstNumber, count)
	ret0, _ := ret[0].([]model.Email)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEmailList indicates an expected call of GetEmailList
func (mr *MockMailRepositoryMockRecorder) GetEmailList(login, folder, sort, firstNumber, count interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmailList", reflect.TypeOf((*MockMailRepository)(nil).GetEmailList), login, folder, sort, firstNumber, count)
}
