// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package Auth is a generated GoMock package.
package Auth

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIAuthClient is a mock of IAuthClient interface
type MockIAuthClient struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthClientMockRecorder
}

// MockIAuthClientMockRecorder is the mock recorder for MockIAuthClient
type MockIAuthClientMockRecorder struct {
	mock *MockIAuthClient
}

// NewMockIAuthClient creates a new mock instance
func NewMockIAuthClient(ctrl *gomock.Controller) *MockIAuthClient {
	mock := &MockIAuthClient{ctrl: ctrl}
	mock.recorder = &MockIAuthClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIAuthClient) EXPECT() *MockIAuthClientMockRecorder {
	return m.recorder
}

// Init mocks base method
func (m *MockIAuthClient) Init(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init
func (mr *MockIAuthClientMockRecorder) Init(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockIAuthClient)(nil).Init), arg0, arg1)
}

// Destroy mocks base method
func (m *MockIAuthClient) Destroy() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Destroy")
}

// Destroy indicates an expected call of Destroy
func (mr *MockIAuthClientMockRecorder) Destroy() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Destroy", reflect.TypeOf((*MockIAuthClient)(nil).Destroy))
}

// LoginBySession mocks base method
func (m *MockIAuthClient) LoginBySession(arg0 string) (string, int32) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoginBySession", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(int32)
	return ret0, ret1
}

// LoginBySession indicates an expected call of LoginBySession
func (mr *MockIAuthClientMockRecorder) LoginBySession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoginBySession", reflect.TypeOf((*MockIAuthClient)(nil).LoginBySession), arg0)
}

// StartSession mocks base method
func (m *MockIAuthClient) StartSession(arg0 string) (string, int32) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartSession", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(int32)
	return ret0, ret1
}

// StartSession indicates an expected call of StartSession
func (mr *MockIAuthClientMockRecorder) StartSession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartSession", reflect.TypeOf((*MockIAuthClient)(nil).StartSession), arg0)
}

// DestroySession mocks base method
func (m *MockIAuthClient) DestroySession(arg0 string) int32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DestroySession", arg0)
	ret0, _ := ret[0].(int32)
	return ret0
}

// DestroySession indicates an expected call of DestroySession
func (mr *MockIAuthClientMockRecorder) DestroySession(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroySession", reflect.TypeOf((*MockIAuthClient)(nil).DestroySession), arg0)
}

// DestroyUserSessions mocks base method
func (m *MockIAuthClient) DestroyUserSessions(arg0 string) int32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DestroyUserSessions", arg0)
	ret0, _ := ret[0].(int32)
	return ret0
}

// DestroyUserSessions indicates an expected call of DestroyUserSessions
func (mr *MockIAuthClientMockRecorder) DestroyUserSessions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroyUserSessions", reflect.TypeOf((*MockIAuthClient)(nil).DestroyUserSessions), arg0)
}

// ChangePassword mocks base method
func (m *MockIAuthClient) ChangePassword(login, oldPass, newPass string) int32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangePassword", login, oldPass, newPass)
	ret0, _ := ret[0].(int32)
	return ret0
}

// ChangePassword indicates an expected call of ChangePassword
func (mr *MockIAuthClientMockRecorder) ChangePassword(login, oldPass, newPass interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangePassword", reflect.TypeOf((*MockIAuthClient)(nil).ChangePassword), login, oldPass, newPass)
}

// CheckCredentials mocks base method
func (m *MockIAuthClient) CheckCredentials(login, password string) int32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckCredentials", login, password)
	ret0, _ := ret[0].(int32)
	return ret0
}

// CheckCredentials indicates an expected call of CheckCredentials
func (mr *MockIAuthClientMockRecorder) CheckCredentials(login, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckCredentials", reflect.TypeOf((*MockIAuthClient)(nil).CheckCredentials), login, password)
}

// RegisterUser mocks base method
func (m *MockIAuthClient) RegisterUser(login, password string) int32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterUser", login, password)
	ret0, _ := ret[0].(int32)
	return ret0
}

// RegisterUser indicates an expected call of RegisterUser
func (mr *MockIAuthClientMockRecorder) RegisterUser(login, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterUser", reflect.TypeOf((*MockIAuthClient)(nil).RegisterUser), login, password)
}

// GetError mocks base method
func (m *MockIAuthClient) GetError(arg0 int32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetError", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetError indicates an expected call of GetError
func (mr *MockIAuthClientMockRecorder) GetError(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetError", reflect.TypeOf((*MockIAuthClient)(nil).GetError), arg0)
}
