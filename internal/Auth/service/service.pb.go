// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StringResult struct {
	Result               string   `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringResult) Reset()         { *m = StringResult{} }
func (m *StringResult) String() string { return proto.CompactTextString(m) }
func (*StringResult) ProtoMessage()    {}
func (*StringResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *StringResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringResult.Unmarshal(m, b)
}
func (m *StringResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringResult.Marshal(b, m, deterministic)
}
func (m *StringResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringResult.Merge(m, src)
}
func (m *StringResult) XXX_Size() int {
	return xxx_messageInfo_StringResult.Size(m)
}
func (m *StringResult) XXX_DiscardUnknown() {
	xxx_messageInfo_StringResult.DiscardUnknown(m)
}

var xxx_messageInfo_StringResult proto.InternalMessageInfo

func (m *StringResult) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *StringResult) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type StatusResult struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResult) Reset()         { *m = StatusResult{} }
func (m *StatusResult) String() string { return proto.CompactTextString(m) }
func (*StatusResult) ProtoMessage()    {}
func (*StatusResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *StatusResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResult.Unmarshal(m, b)
}
func (m *StatusResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResult.Marshal(b, m, deterministic)
}
func (m *StatusResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResult.Merge(m, src)
}
func (m *StatusResult) XXX_Size() int {
	return xxx_messageInfo_StatusResult.Size(m)
}
func (m *StatusResult) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResult.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResult proto.InternalMessageInfo

func (m *StatusResult) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type String struct {
	Data                 string   `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *String) Reset()         { *m = String{} }
func (m *String) String() string { return proto.CompactTextString(m) }
func (*String) ProtoMessage()    {}
func (*String) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *String) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_String.Unmarshal(m, b)
}
func (m *String) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_String.Marshal(b, m, deterministic)
}
func (m *String) XXX_Merge(src proto.Message) {
	xxx_messageInfo_String.Merge(m, src)
}
func (m *String) XXX_Size() int {
	return xxx_messageInfo_String.Size(m)
}
func (m *String) XXX_DiscardUnknown() {
	xxx_messageInfo_String.DiscardUnknown(m)
}

var xxx_messageInfo_String proto.InternalMessageInfo

func (m *String) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ChangePasswordMessage struct {
	Login                string   `protobuf:"bytes,1,opt,name=Login,proto3" json:"Login,omitempty"`
	OldPass              string   `protobuf:"bytes,2,opt,name=OldPass,proto3" json:"OldPass,omitempty"`
	NewPass              string   `protobuf:"bytes,3,opt,name=NewPass,proto3" json:"NewPass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangePasswordMessage) Reset()         { *m = ChangePasswordMessage{} }
func (m *ChangePasswordMessage) String() string { return proto.CompactTextString(m) }
func (*ChangePasswordMessage) ProtoMessage()    {}
func (*ChangePasswordMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *ChangePasswordMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangePasswordMessage.Unmarshal(m, b)
}
func (m *ChangePasswordMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangePasswordMessage.Marshal(b, m, deterministic)
}
func (m *ChangePasswordMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangePasswordMessage.Merge(m, src)
}
func (m *ChangePasswordMessage) XXX_Size() int {
	return xxx_messageInfo_ChangePasswordMessage.Size(m)
}
func (m *ChangePasswordMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangePasswordMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChangePasswordMessage proto.InternalMessageInfo

func (m *ChangePasswordMessage) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *ChangePasswordMessage) GetOldPass() string {
	if m != nil {
		return m.OldPass
	}
	return ""
}

func (m *ChangePasswordMessage) GetNewPass() string {
	if m != nil {
		return m.NewPass
	}
	return ""
}

type CredentialsMessage struct {
	Login                string   `protobuf:"bytes,1,opt,name=Login,proto3" json:"Login,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CredentialsMessage) Reset()         { *m = CredentialsMessage{} }
func (m *CredentialsMessage) String() string { return proto.CompactTextString(m) }
func (*CredentialsMessage) ProtoMessage()    {}
func (*CredentialsMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *CredentialsMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CredentialsMessage.Unmarshal(m, b)
}
func (m *CredentialsMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CredentialsMessage.Marshal(b, m, deterministic)
}
func (m *CredentialsMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CredentialsMessage.Merge(m, src)
}
func (m *CredentialsMessage) XXX_Size() int {
	return xxx_messageInfo_CredentialsMessage.Size(m)
}
func (m *CredentialsMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CredentialsMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CredentialsMessage proto.InternalMessageInfo

func (m *CredentialsMessage) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *CredentialsMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*StringResult)(nil), "service.StringResult")
	proto.RegisterType((*StatusResult)(nil), "service.StatusResult")
	proto.RegisterType((*String)(nil), "service.String")
	proto.RegisterType((*ChangePasswordMessage)(nil), "service.ChangePasswordMessage")
	proto.RegisterType((*CredentialsMessage)(nil), "service.CredentialsMessage")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcb, 0x4e, 0x32, 0x31,
	0x14, 0x66, 0x7e, 0x6e, 0x3f, 0x27, 0x8a, 0xe6, 0x28, 0x86, 0xa0, 0x31, 0xa4, 0x2b, 0x56, 0x2c,
	0x74, 0x63, 0xd8, 0x18, 0x1d, 0x62, 0x34, 0xf1, 0x96, 0x21, 0x3e, 0x40, 0x65, 0x4e, 0x86, 0x89,
	0x64, 0x6a, 0x7a, 0x8a, 0xc4, 0x97, 0xf0, 0x99, 0xcd, 0xb4, 0xe5, 0x22, 0x8a, 0x91, 0xdd, 0xf9,
	0xe6, 0xbb, 0xb4, 0x73, 0xbe, 0xc2, 0x36, 0x93, 0x7e, 0x4b, 0x87, 0xd4, 0x7d, 0xd5, 0xca, 0x28,
	0xac, 0x7a, 0x28, 0x7a, 0xb0, 0x35, 0x30, 0x3a, 0xcd, 0x92, 0x88, 0x78, 0x32, 0x36, 0x78, 0x00,
	0x15, 0x37, 0x35, 0x83, 0x76, 0xd0, 0xa9, 0x45, 0x1e, 0x21, 0x42, 0x29, 0x54, 0x31, 0x35, 0xff,
	0xb5, 0x83, 0x4e, 0x39, 0xb2, 0xb3, 0x10, 0xb9, 0x57, 0x9a, 0x09, 0xaf, 0x68, 0x82, 0x25, 0xcd,
	0x11, 0x54, 0x5c, 0x7e, 0xce, 0xf6, 0xa5, 0x91, 0x3e, 0xd7, 0xce, 0x42, 0x42, 0x23, 0x1c, 0xc9,
	0x2c, 0xa1, 0x47, 0xc9, 0x3c, 0x55, 0x3a, 0xbe, 0x23, 0x66, 0x99, 0x10, 0xee, 0x43, 0xf9, 0x56,
	0x25, 0x69, 0xe6, 0xd5, 0x0e, 0x60, 0x13, 0xaa, 0x0f, 0xe3, 0x38, 0xd7, 0xda, 0x7b, 0xd4, 0xa2,
	0x19, 0xcc, 0x99, 0x7b, 0x9a, 0x5a, 0xa6, 0xe8, 0x18, 0x0f, 0xc5, 0x15, 0x60, 0xa8, 0x29, 0xa6,
	0xcc, 0xa4, 0x72, 0xcc, 0xbf, 0xe7, 0xb7, 0xe0, 0xff, 0xec, 0x22, 0xfe, 0x80, 0x39, 0x3e, 0xf9,
	0x28, 0x42, 0xe9, 0x62, 0x62, 0x46, 0xd8, 0x83, 0xba, 0x55, 0x5f, 0xbe, 0x0f, 0x88, 0x39, 0x55,
	0x19, 0xee, 0x74, 0x67, 0xcb, 0x75, 0xbf, 0xda, 0x6a, 0xac, 0x7c, 0x70, 0xfb, 0x11, 0x05, 0x3c,
	0xb3, 0x1b, 0xd3, 0x66, 0x73, 0x67, 0x0f, 0xea, 0x7d, 0x62, 0xa3, 0xd5, 0xdf, 0x4e, 0x5d, 0xb4,
	0x22, 0x0a, 0x78, 0x0e, 0x7b, 0xde, 0xfb, 0xc4, 0xa4, 0xbd, 0x9f, 0x37, 0x08, 0xb8, 0x81, 0xfa,
	0xd7, 0x9a, 0xf0, 0x78, 0x2e, 0xfd, 0xb1, 0xbf, 0xf5, 0x51, 0xd7, 0xb0, 0x1b, 0x8e, 0x68, 0xf8,
	0xb2, 0xd4, 0x09, 0x1e, 0x2e, 0xc2, 0xbe, 0x35, 0xb5, 0x36, 0xe9, 0xb9, 0x62, 0x5f, 0xf2, 0xe9,
	0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x77, 0xec, 0x7a, 0x83, 0xda, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	LoginBySession(ctx context.Context, in *String, opts ...grpc.CallOption) (*StringResult, error)
	StartSession(ctx context.Context, in *String, opts ...grpc.CallOption) (*StringResult, error)
	DestroySession(ctx context.Context, in *String, opts ...grpc.CallOption) (*StatusResult, error)
	DestroyUserSessions(ctx context.Context, in *String, opts ...grpc.CallOption) (*StatusResult, error)
	ChangePassword(ctx context.Context, in *ChangePasswordMessage, opts ...grpc.CallOption) (*StatusResult, error)
	CheckCredentials(ctx context.Context, in *CredentialsMessage, opts ...grpc.CallOption) (*StatusResult, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) LoginBySession(ctx context.Context, in *String, opts ...grpc.CallOption) (*StringResult, error) {
	out := new(StringResult)
	err := c.cc.Invoke(ctx, "/service.Auth/LoginBySession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) StartSession(ctx context.Context, in *String, opts ...grpc.CallOption) (*StringResult, error) {
	out := new(StringResult)
	err := c.cc.Invoke(ctx, "/service.Auth/StartSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) DestroySession(ctx context.Context, in *String, opts ...grpc.CallOption) (*StatusResult, error) {
	out := new(StatusResult)
	err := c.cc.Invoke(ctx, "/service.Auth/DestroySession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) DestroyUserSessions(ctx context.Context, in *String, opts ...grpc.CallOption) (*StatusResult, error) {
	out := new(StatusResult)
	err := c.cc.Invoke(ctx, "/service.Auth/DestroyUserSessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) ChangePassword(ctx context.Context, in *ChangePasswordMessage, opts ...grpc.CallOption) (*StatusResult, error) {
	out := new(StatusResult)
	err := c.cc.Invoke(ctx, "/service.Auth/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) CheckCredentials(ctx context.Context, in *CredentialsMessage, opts ...grpc.CallOption) (*StatusResult, error) {
	out := new(StatusResult)
	err := c.cc.Invoke(ctx, "/service.Auth/CheckCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	LoginBySession(context.Context, *String) (*StringResult, error)
	StartSession(context.Context, *String) (*StringResult, error)
	DestroySession(context.Context, *String) (*StatusResult, error)
	DestroyUserSessions(context.Context, *String) (*StatusResult, error)
	ChangePassword(context.Context, *ChangePasswordMessage) (*StatusResult, error)
	CheckCredentials(context.Context, *CredentialsMessage) (*StatusResult, error)
}

// UnimplementedAuthServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServer struct {
}

func (*UnimplementedAuthServer) LoginBySession(ctx context.Context, req *String) (*StringResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginBySession not implemented")
}
func (*UnimplementedAuthServer) StartSession(ctx context.Context, req *String) (*StringResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartSession not implemented")
}
func (*UnimplementedAuthServer) DestroySession(ctx context.Context, req *String) (*StatusResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroySession not implemented")
}
func (*UnimplementedAuthServer) DestroyUserSessions(ctx context.Context, req *String) (*StatusResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyUserSessions not implemented")
}
func (*UnimplementedAuthServer) ChangePassword(ctx context.Context, req *ChangePasswordMessage) (*StatusResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}
func (*UnimplementedAuthServer) CheckCredentials(ctx context.Context, req *CredentialsMessage) (*StatusResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckCredentials not implemented")
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_LoginBySession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).LoginBySession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Auth/LoginBySession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).LoginBySession(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_StartSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).StartSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Auth/StartSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).StartSession(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_DestroySession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).DestroySession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Auth/DestroySession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).DestroySession(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_DestroyUserSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).DestroyUserSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Auth/DestroyUserSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).DestroyUserSessions(ctx, req.(*String))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangePasswordMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Auth/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).ChangePassword(ctx, req.(*ChangePasswordMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_CheckCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialsMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).CheckCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Auth/CheckCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).CheckCredentials(ctx, req.(*CredentialsMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoginBySession",
			Handler:    _Auth_LoginBySession_Handler,
		},
		{
			MethodName: "StartSession",
			Handler:    _Auth_StartSession_Handler,
		},
		{
			MethodName: "DestroySession",
			Handler:    _Auth_DestroySession_Handler,
		},
		{
			MethodName: "DestroyUserSessions",
			Handler:    _Auth_DestroyUserSessions_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _Auth_ChangePassword_Handler,
		},
		{
			MethodName: "CheckCredentials",
			Handler:    _Auth_CheckCredentials_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
