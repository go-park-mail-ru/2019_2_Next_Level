// Code generated by MockGen. DO NOT EDIT.
// Source: interf.go

// Package postinterface is a generated GoMock package.
package postinterface

import (
	post "2019_2_Next_Level/internal/post"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIPostInterface is a mock of IPostInterface interface
type MockIPostInterface struct {
	ctrl     *gomock.Controller
	recorder *MockIPostInterfaceMockRecorder
}

// MockIPostInterfaceMockRecorder is the mock recorder for MockIPostInterface
type MockIPostInterfaceMockRecorder struct {
	mock *MockIPostInterface
}

// NewMockIPostInterface creates a new mock instance
func NewMockIPostInterface(ctrl *gomock.Controller) *MockIPostInterface {
	mock := &MockIPostInterface{ctrl: ctrl}
	mock.recorder = &MockIPostInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIPostInterface) EXPECT() *MockIPostInterfaceMockRecorder {
	return m.recorder
}

// Init mocks base method
func (m *MockIPostInterface) Init() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Init")
}

// Init indicates an expected call of Init
func (mr *MockIPostInterfaceMockRecorder) Init() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockIPostInterface)(nil).Init))
}

// Destroy mocks base method
func (m *MockIPostInterface) Destroy() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Destroy")
}

// Destroy indicates an expected call of Destroy
func (mr *MockIPostInterfaceMockRecorder) Destroy() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Destroy", reflect.TypeOf((*MockIPostInterface)(nil).Destroy))
}

// Put mocks base method
func (m *MockIPostInterface) Put(arg0 post.Email) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Put", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Put indicates an expected call of Put
func (mr *MockIPostInterfaceMockRecorder) Put(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockIPostInterface)(nil).Put), arg0)
}

// Get mocks base method
func (m *MockIPostInterface) Get() (post.Email, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(post.Email)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockIPostInterfaceMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIPostInterface)(nil).Get))
}
